
service: myserverlessproject
# app and org for use with dashboard.serverless.com
app: my-sources
org: mysources

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  region: eu-west-1
  environment:
    usersTable: ${self:custom.usersTable}
    foldersTable: ${self:custom.foldersTable}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'

custom:
  usersTable: users
  foldersTable: folderss

functions:
  getUser:
    handler: lambdas/endpoints/getUser.handler
    events:
      - http:
          path: get-user/{ID}
          method: GET
          cors: true 
  getPlayerScore:
    handler: lambdas/endpoints/getPlayerScore.handler
    events:
      - http:
          path: get-player-score/{ID}
          method: GET
          cors: true 
  createUser:
    handler: lambdas/endpoints/createUser.handler
    events:
      - http:
          path: create-user/{ID}
          method: POST
          cors: true
  updateUser:
    handler: lambdas/endpoints/updateUser.handler
    events:
      - http:
          path: update-user/{ID}
          method: PUT
          cors: true
  createFolder:
    handler: lambdas/endpoints/createFolder.handler
    events:
      - http:
          path: create-folder/{ID}
          method: POST
          cors: true
  listAllUserFolders:
    handler: lambdas/endpoints/listAllUserFolders.handler
    events:
      - http:
          path: list-user-folders/{ID}
          method: GET
          cors: true

resources:
  Resources:
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usersTable}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        
    FoldersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.foldersTable}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
          - AttributeName: category
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
          - AttributeName: category
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

        GlobalSecondaryIndexes:
          - IndexName: user_id
            KeySchema:
              - AttributeName: user_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL